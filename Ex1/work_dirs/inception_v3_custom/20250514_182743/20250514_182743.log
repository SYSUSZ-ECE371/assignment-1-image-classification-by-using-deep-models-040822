2025/05/14 18:27:44 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1637579794
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 2.4.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.19.1+cu121
    OpenCV: 4.11.0
    MMEngine: 0.10.7

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1637579794
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/14 18:27:44 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=256)
data_preprocessor = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    num_classes=1000,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
dataset_type = 'ImageNet'
default_hooks = dict(
    checkpoint=dict(interval=10, type='CheckpointHook'),
    logger=dict(interval=100, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='VisualizationHook'))
default_scope = 'mmpretrain'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
model = dict(
    backbone=dict(
        aux_logits=False,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth',
            prefix='backbone',
            type='Pretrained'),
        num_classes=5,
        type='InceptionV3'),
    head=dict(
        loss=dict(loss_weight=1.0, type='CrossEntropyLoss'),
        topk=1,
        type='ClsHead'),
    neck=None,
    type='ImageClassifier')
optim_wrapper = dict(
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0001))
param_scheduler = dict(
    T_max=100, begin=0, by_epoch=True, end=100, type='CosineAnnealingLR')
randomness = dict(deterministic=False, seed=None)
resume = False
test_cfg = dict()
test_dataloader = dict(
    batch_size=32,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='val.txt',
        data_prefix='val',
        data_root='data/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(edge='short', scale=256, type='ResizeEdge'),
            dict(crop_size=224, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        split='val',
        type='ImageNet'),
    num_workers=5,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(topk=1, type='Accuracy')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(edge='short', scale=256, type='ResizeEdge'),
    dict(crop_size=224, type='CenterCrop'),
    dict(type='PackInputs'),
]
train_cfg = dict(by_epoch=True, max_epochs=30, val_interval=1)
train_dataloader = dict(
    batch_size=32,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='train.txt',
        data_prefix='train',
        data_root='data/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(scale=224, type='RandomResizedCrop'),
            dict(direction='horizontal', prob=0.5, type='RandomFlip'),
            dict(type='PackInputs'),
        ],
        split='train',
        type='ImageNet'),
    num_workers=5,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(scale=224, type='RandomResizedCrop'),
    dict(direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(type='PackInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=32,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='val.txt',
        data_prefix='val',
        data_root='data/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(edge='short', scale=256, type='ResizeEdge'),
            dict(crop_size=224, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        split='val',
        type='ImageNet'),
    num_workers=5,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(topk=1, type='Accuracy')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/inception_v3_custom'

2025/05/14 18:27:45 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/14 18:27:45 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/14 18:27:46 - mmengine - INFO - load backbone in model from: https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth
2025/05/14 18:27:46 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for fc.weight: copying a param with shape torch.Size([1000, 2048]) from checkpoint, the shape in current model is torch.Size([5, 2048]).
size mismatch for fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([5]).
Name of parameter - Initialization information

backbone.Conv2d_1a_3x3.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_1a_3x3.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Conv2d_1a_3x3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_2a_3x3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_2a_3x3.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Conv2d_2a_3x3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_2b_3x3.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_2b_3x3.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Conv2d_2b_3x3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_3b_1x1.conv.weight - torch.Size([80, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_3b_1x1.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Conv2d_3b_1x1.bn.bias - torch.Size([80]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_4a_3x3.conv.weight - torch.Size([192, 80, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Conv2d_4a_3x3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Conv2d_4a_3x3.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch1x1.conv.weight - torch.Size([64, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5b.branch1x1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch5x5_1.conv.weight - torch.Size([48, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch5x5_1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5b.branch5x5_1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch5x5_2.conv.weight - torch.Size([64, 48, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch5x5_2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5b.branch5x5_2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch3x3dbl_1.conv.weight - torch.Size([64, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch3x3dbl_1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5b.branch3x3dbl_1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch3x3dbl_2.conv.weight - torch.Size([96, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch3x3dbl_2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5b.branch3x3dbl_2.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch3x3dbl_3.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch3x3dbl_3.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5b.branch3x3dbl_3.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch_pool.conv.weight - torch.Size([32, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5b.branch_pool.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5b.branch_pool.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch1x1.conv.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5c.branch1x1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch5x5_1.conv.weight - torch.Size([48, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch5x5_1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5c.branch5x5_1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch5x5_2.conv.weight - torch.Size([64, 48, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch5x5_2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5c.branch5x5_2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch3x3dbl_1.conv.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch3x3dbl_1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5c.branch3x3dbl_1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch3x3dbl_2.conv.weight - torch.Size([96, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch3x3dbl_2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5c.branch3x3dbl_2.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch3x3dbl_3.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch3x3dbl_3.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5c.branch3x3dbl_3.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch_pool.conv.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5c.branch_pool.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5c.branch_pool.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch1x1.conv.weight - torch.Size([64, 288, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch1x1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5d.branch1x1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch5x5_1.conv.weight - torch.Size([48, 288, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch5x5_1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5d.branch5x5_1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch5x5_2.conv.weight - torch.Size([64, 48, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch5x5_2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5d.branch5x5_2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch3x3dbl_1.conv.weight - torch.Size([64, 288, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch3x3dbl_1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5d.branch3x3dbl_1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch3x3dbl_2.conv.weight - torch.Size([96, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch3x3dbl_2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5d.branch3x3dbl_2.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch3x3dbl_3.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch3x3dbl_3.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5d.branch3x3dbl_3.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch_pool.conv.weight - torch.Size([64, 288, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_5d.branch_pool.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_5d.branch_pool.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3.conv.weight - torch.Size([384, 288, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6a.branch3x3.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3dbl_1.conv.weight - torch.Size([64, 288, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3dbl_1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6a.branch3x3dbl_1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3dbl_2.conv.weight - torch.Size([96, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3dbl_2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6a.branch3x3dbl_2.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3dbl_3.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6a.branch3x3dbl_3.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6a.branch3x3dbl_3.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch1x1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch1x1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch1x1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7_1.conv.weight - torch.Size([128, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7_1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7_1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7_2.conv.weight - torch.Size([128, 128, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7_2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7_2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7_3.conv.weight - torch.Size([192, 128, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7_3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7_3.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_1.conv.weight - torch.Size([128, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7dbl_1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_2.conv.weight - torch.Size([128, 128, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7dbl_2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_3.conv.weight - torch.Size([128, 128, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_3.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7dbl_3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_4.conv.weight - torch.Size([128, 128, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_4.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7dbl_4.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_5.conv.weight - torch.Size([192, 128, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch7x7dbl_5.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch7x7dbl_5.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch_pool.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6b.branch_pool.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6b.branch_pool.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch1x1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch1x1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch1x1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7_1.conv.weight - torch.Size([160, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7_1.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7_1.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7_2.conv.weight - torch.Size([160, 160, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7_2.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7_2.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7_3.conv.weight - torch.Size([192, 160, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7_3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7_3.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_1.conv.weight - torch.Size([160, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_1.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7dbl_1.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_2.conv.weight - torch.Size([160, 160, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_2.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7dbl_2.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_3.conv.weight - torch.Size([160, 160, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7dbl_3.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_4.conv.weight - torch.Size([160, 160, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_4.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7dbl_4.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_5.conv.weight - torch.Size([192, 160, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch7x7dbl_5.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch7x7dbl_5.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch_pool.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6c.branch_pool.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6c.branch_pool.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch1x1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch1x1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch1x1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7_1.conv.weight - torch.Size([160, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7_1.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7_1.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7_2.conv.weight - torch.Size([160, 160, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7_2.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7_2.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7_3.conv.weight - torch.Size([192, 160, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7_3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7_3.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_1.conv.weight - torch.Size([160, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_1.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7dbl_1.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_2.conv.weight - torch.Size([160, 160, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_2.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7dbl_2.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_3.conv.weight - torch.Size([160, 160, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_3.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7dbl_3.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_4.conv.weight - torch.Size([160, 160, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_4.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7dbl_4.bn.bias - torch.Size([160]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_5.conv.weight - torch.Size([192, 160, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch7x7dbl_5.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch7x7dbl_5.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch_pool.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6d.branch_pool.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6d.branch_pool.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch1x1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch1x1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch1x1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7_1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7_1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7_1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7_2.conv.weight - torch.Size([192, 192, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7_2.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7_2.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7_3.conv.weight - torch.Size([192, 192, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7_3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7_3.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7dbl_1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_2.conv.weight - torch.Size([192, 192, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_2.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7dbl_2.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_3.conv.weight - torch.Size([192, 192, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7dbl_3.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_4.conv.weight - torch.Size([192, 192, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_4.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7dbl_4.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_5.conv.weight - torch.Size([192, 192, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch7x7dbl_5.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch7x7dbl_5.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch_pool.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_6e.branch_pool.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_6e.branch_pool.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch3x3_1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch3x3_1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7a.branch3x3_1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch3x3_2.conv.weight - torch.Size([320, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch3x3_2.bn.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7a.branch3x3_2.bn.bias - torch.Size([320]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_1.conv.weight - torch.Size([192, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7a.branch7x7x3_1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_2.conv.weight - torch.Size([192, 192, 1, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_2.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7a.branch7x7x3_2.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_3.conv.weight - torch.Size([192, 192, 7, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_3.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7a.branch7x7x3_3.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_4.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7a.branch7x7x3_4.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7a.branch7x7x3_4.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch1x1.conv.weight - torch.Size([320, 1280, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch1x1.bn.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch1x1.bn.bias - torch.Size([320]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3_1.conv.weight - torch.Size([384, 1280, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3_1.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch3x3_1.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3_2a.conv.weight - torch.Size([384, 384, 1, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3_2a.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch3x3_2a.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3_2b.conv.weight - torch.Size([384, 384, 3, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3_2b.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch3x3_2b.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_1.conv.weight - torch.Size([448, 1280, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_1.bn.weight - torch.Size([448]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch3x3dbl_1.bn.bias - torch.Size([448]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_2.conv.weight - torch.Size([384, 448, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_2.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch3x3dbl_2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_3a.conv.weight - torch.Size([384, 384, 1, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_3a.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch3x3dbl_3a.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_3b.conv.weight - torch.Size([384, 384, 3, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch3x3dbl_3b.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch3x3dbl_3b.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch_pool.conv.weight - torch.Size([192, 1280, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7b.branch_pool.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7b.branch_pool.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch1x1.conv.weight - torch.Size([320, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch1x1.bn.weight - torch.Size([320]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch1x1.bn.bias - torch.Size([320]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3_1.conv.weight - torch.Size([384, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3_1.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch3x3_1.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3_2a.conv.weight - torch.Size([384, 384, 1, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3_2a.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch3x3_2a.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3_2b.conv.weight - torch.Size([384, 384, 3, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3_2b.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch3x3_2b.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_1.conv.weight - torch.Size([448, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_1.bn.weight - torch.Size([448]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch3x3dbl_1.bn.bias - torch.Size([448]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_2.conv.weight - torch.Size([384, 448, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_2.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch3x3dbl_2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_3a.conv.weight - torch.Size([384, 384, 1, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_3a.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch3x3dbl_3a.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_3b.conv.weight - torch.Size([384, 384, 3, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch3x3dbl_3b.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch3x3dbl_3b.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch_pool.conv.weight - torch.Size([192, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.Mixed_7c.branch_pool.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.Mixed_7c.branch_pool.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/inception-v3/inception-v3_3rdparty_8xb32_in1k_20220615-dcd4d910.pth 

backbone.fc.weight - torch.Size([5, 2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.fc.bias - torch.Size([5]): 
The value is the same before and after calling `init_weights` of ImageClassifier  
2025/05/14 18:27:46 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/14 18:27:46 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/14 18:27:46 - mmengine - INFO - Checkpoints will be saved to /root/work_dirs/inception_v3_custom.
2025/05/14 18:27:50 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:27:50 - mmengine - INFO - Epoch(train)  [1][72/72]  lr: 1.0000e-03  eta: 0:01:47  time: 0.0523  data_time: 0.0005  memory: 1776  loss: 0.7251
2025/05/14 18:27:50 - mmengine - INFO - Epoch(val) [1][18/18]    accuracy/top1: 85.7394  data_time: 0.0157  time: 0.0307
2025/05/14 18:27:53 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:27:53 - mmengine - INFO - Epoch(train)  [2][72/72]  lr: 9.9975e-04  eta: 0:01:32  time: 0.0359  data_time: 0.0006  memory: 1776  loss: 0.4290
2025/05/14 18:27:53 - mmengine - INFO - Epoch(val) [2][18/18]    accuracy/top1: 90.8451  data_time: 0.0043  time: 0.0181
2025/05/14 18:27:56 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:27:56 - mmengine - INFO - Epoch(train)  [3][72/72]  lr: 9.9901e-04  eta: 0:01:23  time: 0.0331  data_time: 0.0005  memory: 1776  loss: 0.3391
2025/05/14 18:27:56 - mmengine - INFO - Epoch(val) [3][18/18]    accuracy/top1: 92.9577  data_time: 0.0066  time: 0.0164
2025/05/14 18:27:59 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:27:59 - mmengine - INFO - Epoch(train)  [4][72/72]  lr: 9.9778e-04  eta: 0:01:17  time: 0.0348  data_time: 0.0007  memory: 1776  loss: 0.3634
2025/05/14 18:27:59 - mmengine - INFO - Epoch(val) [4][18/18]    accuracy/top1: 92.9577  data_time: 0.0048  time: 0.0152
2025/05/14 18:28:02 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:02 - mmengine - INFO - Epoch(train)  [5][72/72]  lr: 9.9606e-04  eta: 0:01:13  time: 0.0342  data_time: 0.0006  memory: 1776  loss: 0.2993
2025/05/14 18:28:02 - mmengine - INFO - Epoch(val) [5][18/18]    accuracy/top1: 93.8380  data_time: 0.0045  time: 0.0165
2025/05/14 18:28:05 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:05 - mmengine - INFO - Epoch(train)  [6][72/72]  lr: 9.9384e-04  eta: 0:01:08  time: 0.0348  data_time: 0.0006  memory: 1776  loss: 0.2204
2025/05/14 18:28:05 - mmengine - INFO - Epoch(val) [6][18/18]    accuracy/top1: 93.4859  data_time: 0.0067  time: 0.0164
2025/05/14 18:28:08 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:08 - mmengine - INFO - Epoch(train)  [7][72/72]  lr: 9.9114e-04  eta: 0:01:05  time: 0.0343  data_time: 0.0006  memory: 1776  loss: 0.1963
2025/05/14 18:28:08 - mmengine - INFO - Epoch(val) [7][18/18]    accuracy/top1: 94.3662  data_time: 0.0047  time: 0.0149
2025/05/14 18:28:11 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:11 - mmengine - INFO - Epoch(train)  [8][72/72]  lr: 9.8796e-04  eta: 0:01:02  time: 0.0364  data_time: 0.0007  memory: 1776  loss: 0.1456
2025/05/14 18:28:11 - mmengine - INFO - Epoch(val) [8][18/18]    accuracy/top1: 95.0704  data_time: 0.0038  time: 0.0156
2025/05/14 18:28:14 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:14 - mmengine - INFO - Epoch(train)  [9][72/72]  lr: 9.8429e-04  eta: 0:00:58  time: 0.0342  data_time: 0.0006  memory: 1776  loss: 0.2690
2025/05/14 18:28:14 - mmengine - INFO - Epoch(val) [9][18/18]    accuracy/top1: 95.2465  data_time: 0.0050  time: 0.0149
2025/05/14 18:28:17 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:17 - mmengine - INFO - Epoch(train) [10][72/72]  lr: 9.8015e-04  eta: 0:00:55  time: 0.0345  data_time: 0.0006  memory: 1776  loss: 0.2184
2025/05/14 18:28:17 - mmengine - INFO - Saving checkpoint at 10 epochs
2025/05/14 18:28:18 - mmengine - INFO - Epoch(val) [10][18/18]    accuracy/top1: 94.1901  data_time: 0.0053  time: 0.0155
2025/05/14 18:28:20 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:20 - mmengine - INFO - Epoch(train) [11][72/72]  lr: 9.7553e-04  eta: 0:00:52  time: 0.0365  data_time: 0.0007  memory: 1776  loss: 0.1981
2025/05/14 18:28:21 - mmengine - INFO - Epoch(val) [11][18/18]    accuracy/top1: 94.1901  data_time: 0.0047  time: 0.0153
2025/05/14 18:28:24 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:24 - mmengine - INFO - Epoch(train) [12][72/72]  lr: 9.7044e-04  eta: 0:00:50  time: 0.0365  data_time: 0.0006  memory: 1776  loss: 0.0982
2025/05/14 18:28:24 - mmengine - INFO - Epoch(val) [12][18/18]    accuracy/top1: 94.8944  data_time: 0.0049  time: 0.0155
2025/05/14 18:28:27 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:27 - mmengine - INFO - Epoch(train) [13][72/72]  lr: 9.6489e-04  eta: 0:00:47  time: 0.0339  data_time: 0.0007  memory: 1776  loss: 0.1360
2025/05/14 18:28:27 - mmengine - INFO - Epoch(val) [13][18/18]    accuracy/top1: 94.3662  data_time: 0.0043  time: 0.0164
2025/05/14 18:28:29 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:30 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:30 - mmengine - INFO - Epoch(train) [14][72/72]  lr: 9.5888e-04  eta: 0:00:44  time: 0.0362  data_time: 0.0009  memory: 1776  loss: 0.1545
2025/05/14 18:28:30 - mmengine - INFO - Epoch(val) [14][18/18]    accuracy/top1: 95.0704  data_time: 0.0054  time: 0.0165
2025/05/14 18:28:33 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:33 - mmengine - INFO - Epoch(train) [15][72/72]  lr: 9.5241e-04  eta: 0:00:41  time: 0.0365  data_time: 0.0008  memory: 1776  loss: 0.2115
2025/05/14 18:28:33 - mmengine - INFO - Epoch(val) [15][18/18]    accuracy/top1: 93.6620  data_time: 0.0044  time: 0.0160
2025/05/14 18:28:36 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:36 - mmengine - INFO - Epoch(train) [16][72/72]  lr: 9.4550e-04  eta: 0:00:39  time: 0.0361  data_time: 0.0007  memory: 1776  loss: 0.1471
2025/05/14 18:28:36 - mmengine - INFO - Epoch(val) [16][18/18]    accuracy/top1: 94.8944  data_time: 0.0041  time: 0.0161
2025/05/14 18:28:39 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:39 - mmengine - INFO - Epoch(train) [17][72/72]  lr: 9.3815e-04  eta: 0:00:36  time: 0.0344  data_time: 0.0007  memory: 1776  loss: 0.1272
2025/05/14 18:28:39 - mmengine - INFO - Epoch(val) [17][18/18]    accuracy/top1: 94.5423  data_time: 0.0050  time: 0.0154
2025/05/14 18:28:42 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:42 - mmengine - INFO - Epoch(train) [18][72/72]  lr: 9.3037e-04  eta: 0:00:33  time: 0.0347  data_time: 0.0006  memory: 1776  loss: 0.1821
2025/05/14 18:28:42 - mmengine - INFO - Epoch(val) [18][18/18]    accuracy/top1: 94.7183  data_time: 0.0055  time: 0.0150
2025/05/14 18:28:45 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:45 - mmengine - INFO - Epoch(train) [19][72/72]  lr: 9.2216e-04  eta: 0:00:30  time: 0.0365  data_time: 0.0007  memory: 1776  loss: 0.1270
2025/05/14 18:28:45 - mmengine - INFO - Epoch(val) [19][18/18]    accuracy/top1: 94.1901  data_time: 0.0046  time: 0.0153
2025/05/14 18:28:48 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:48 - mmengine - INFO - Epoch(train) [20][72/72]  lr: 9.1354e-04  eta: 0:00:27  time: 0.0367  data_time: 0.0007  memory: 1776  loss: 0.0964
2025/05/14 18:28:48 - mmengine - INFO - Saving checkpoint at 20 epochs
2025/05/14 18:28:49 - mmengine - INFO - Epoch(val) [20][18/18]    accuracy/top1: 93.8380  data_time: 0.0054  time: 0.0171
2025/05/14 18:28:52 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:52 - mmengine - INFO - Epoch(train) [21][72/72]  lr: 9.0451e-04  eta: 0:00:24  time: 0.0357  data_time: 0.0007  memory: 1776  loss: 0.1216
2025/05/14 18:28:52 - mmengine - INFO - Epoch(val) [21][18/18]    accuracy/top1: 94.7183  data_time: 0.0045  time: 0.0158
2025/05/14 18:28:55 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:55 - mmengine - INFO - Epoch(train) [22][72/72]  lr: 8.9508e-04  eta: 0:00:22  time: 0.0337  data_time: 0.0006  memory: 1776  loss: 0.1294
2025/05/14 18:28:55 - mmengine - INFO - Epoch(val) [22][18/18]    accuracy/top1: 93.8380  data_time: 0.0050  time: 0.0151
2025/05/14 18:28:58 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:28:58 - mmengine - INFO - Epoch(train) [23][72/72]  lr: 8.8526e-04  eta: 0:00:19  time: 0.0334  data_time: 0.0006  memory: 1776  loss: 0.0683
2025/05/14 18:28:58 - mmengine - INFO - Epoch(val) [23][18/18]    accuracy/top1: 94.1901  data_time: 0.0051  time: 0.0150
2025/05/14 18:29:01 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:01 - mmengine - INFO - Epoch(train) [24][72/72]  lr: 8.7506e-04  eta: 0:00:16  time: 0.0339  data_time: 0.0006  memory: 1776  loss: 0.1087
2025/05/14 18:29:01 - mmengine - INFO - Epoch(val) [24][18/18]    accuracy/top1: 95.4225  data_time: 0.0050  time: 0.0148
2025/05/14 18:29:04 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:04 - mmengine - INFO - Epoch(train) [25][72/72]  lr: 8.6448e-04  eta: 0:00:13  time: 0.0357  data_time: 0.0007  memory: 1776  loss: 0.0871
2025/05/14 18:29:04 - mmengine - INFO - Epoch(val) [25][18/18]    accuracy/top1: 94.7183  data_time: 0.0041  time: 0.0149
2025/05/14 18:29:07 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:07 - mmengine - INFO - Epoch(train) [26][72/72]  lr: 8.5355e-04  eta: 0:00:11  time: 0.0375  data_time: 0.0008  memory: 1776  loss: 0.1201
2025/05/14 18:29:07 - mmengine - INFO - Epoch(val) [26][18/18]    accuracy/top1: 95.2465  data_time: 0.0044  time: 0.0158
2025/05/14 18:29:10 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:10 - mmengine - INFO - Epoch(train) [27][72/72]  lr: 8.4227e-04  eta: 0:00:08  time: 0.0373  data_time: 0.0006  memory: 1776  loss: 0.0797
2025/05/14 18:29:10 - mmengine - INFO - Epoch(val) [27][18/18]    accuracy/top1: 95.5986  data_time: 0.0049  time: 0.0156
2025/05/14 18:29:13 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:13 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:13 - mmengine - INFO - Epoch(train) [28][72/72]  lr: 8.3066e-04  eta: 0:00:05  time: 0.0358  data_time: 0.0007  memory: 1776  loss: 0.0888
2025/05/14 18:29:14 - mmengine - INFO - Epoch(val) [28][18/18]    accuracy/top1: 94.0141  data_time: 0.0054  time: 0.0161
2025/05/14 18:29:16 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:16 - mmengine - INFO - Epoch(train) [29][72/72]  lr: 8.1871e-04  eta: 0:00:02  time: 0.0337  data_time: 0.0006  memory: 1776  loss: 0.1139
2025/05/14 18:29:17 - mmengine - INFO - Epoch(val) [29][18/18]    accuracy/top1: 94.8944  data_time: 0.0061  time: 0.0158
2025/05/14 18:29:20 - mmengine - INFO - Exp name: inception_v3_custom_20250514_182743
2025/05/14 18:29:20 - mmengine - INFO - Epoch(train) [30][72/72]  lr: 8.0645e-04  eta: 0:00:00  time: 0.0355  data_time: 0.0007  memory: 1776  loss: 0.1032
2025/05/14 18:29:20 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/14 18:29:21 - mmengine - INFO - Epoch(val) [30][18/18]    accuracy/top1: 94.5423  data_time: 0.0087  time: 0.0197
